var _elm_lang$elm_architecture_tutorial$Icosahedron$z4 = _elm_community$linear_algebra$Math_Vector3$normalize(
	A3(_elm_community$linear_algebra$Math_Vector3$vec3, -2, 1, 0));
var _elm_lang$elm_architecture_tutorial$Icosahedron$z3 = _elm_community$linear_algebra$Math_Vector3$normalize(
	A3(_elm_community$linear_algebra$Math_Vector3$vec3, -2, -1, 0));
var _elm_lang$elm_architecture_tutorial$Icosahedron$z2 = _elm_community$linear_algebra$Math_Vector3$normalize(
	A3(_elm_community$linear_algebra$Math_Vector3$vec3, 2, -1, 0));
var _elm_lang$elm_architecture_tutorial$Icosahedron$z1 = _elm_community$linear_algebra$Math_Vector3$normalize(
	A3(_elm_community$linear_algebra$Math_Vector3$vec3, 2, 1, 0));
var _elm_lang$elm_architecture_tutorial$Icosahedron$y4 = _elm_community$linear_algebra$Math_Vector3$normalize(
	A3(_elm_community$linear_algebra$Math_Vector3$vec3, 1, 0, -2));
var _elm_lang$elm_architecture_tutorial$Icosahedron$y3 = _elm_community$linear_algebra$Math_Vector3$normalize(
	A3(_elm_community$linear_algebra$Math_Vector3$vec3, -1, 0, -2));
var _elm_lang$elm_architecture_tutorial$Icosahedron$y2 = _elm_community$linear_algebra$Math_Vector3$normalize(
	A3(_elm_community$linear_algebra$Math_Vector3$vec3, -1, 0, 2));
var _elm_lang$elm_architecture_tutorial$Icosahedron$y1 = _elm_community$linear_algebra$Math_Vector3$normalize(
	A3(_elm_community$linear_algebra$Math_Vector3$vec3, 1, 0, 2));
var _elm_lang$elm_architecture_tutorial$Icosahedron$x4 = _elm_community$linear_algebra$Math_Vector3$normalize(
	A3(_elm_community$linear_algebra$Math_Vector3$vec3, 0, -2, 1));
var _elm_lang$elm_architecture_tutorial$Icosahedron$x3 = _elm_community$linear_algebra$Math_Vector3$normalize(
	A3(_elm_community$linear_algebra$Math_Vector3$vec3, 0, -2, -1));
var _elm_lang$elm_architecture_tutorial$Icosahedron$x2 = _elm_community$linear_algebra$Math_Vector3$normalize(
	A3(_elm_community$linear_algebra$Math_Vector3$vec3, 0, 2, -1));
var _elm_lang$elm_architecture_tutorial$Icosahedron$x1 = _elm_community$linear_algebra$Math_Vector3$normalize(
	A3(_elm_community$linear_algebra$Math_Vector3$vec3, 0, 2, 1));
var _elm_lang$elm_architecture_tutorial$Icosahedron$createNormal = F3(
	function (a, b, c) {
		return _elm_community$linear_algebra$Math_Vector3$normalize(
			A2(
				_elm_community$linear_algebra$Math_Vector3$add,
				A2(_elm_community$linear_algebra$Math_Vector3$add, a, b),
				c));
	});
var _elm_lang$elm_architecture_tutorial$Icosahedron$createFace = F4(
	function (colorP, a, b, c) {
		return A5(
			_elm_lang$elm_architecture_tutorial$TriangleFace$face,
			colorP,
			A3(_elm_lang$elm_architecture_tutorial$Icosahedron$createNormal, a, b, c),
			a,
			b,
			c);
	});
var _elm_lang$elm_architecture_tutorial$Icosahedron$whitesX1 = A4(_elm_lang$elm_architecture_tutorial$Icosahedron$createFace, _elm_lang$core$Color$blue, _elm_lang$elm_architecture_tutorial$Icosahedron$x1, _elm_lang$elm_architecture_tutorial$Icosahedron$x2, _elm_lang$elm_architecture_tutorial$Icosahedron$z1);
var _elm_lang$elm_architecture_tutorial$Icosahedron$whitesX2 = A4(_elm_lang$elm_architecture_tutorial$Icosahedron$createFace, _elm_lang$core$Color$red, _elm_lang$elm_architecture_tutorial$Icosahedron$x1, _elm_lang$elm_architecture_tutorial$Icosahedron$x2, _elm_lang$elm_architecture_tutorial$Icosahedron$z4);
var _elm_lang$elm_architecture_tutorial$Icosahedron$whitesX3 = A4(_elm_lang$elm_architecture_tutorial$Icosahedron$createFace, _elm_lang$core$Color$blue, _elm_lang$elm_architecture_tutorial$Icosahedron$x3, _elm_lang$elm_architecture_tutorial$Icosahedron$x4, _elm_lang$elm_architecture_tutorial$Icosahedron$z2);
var _elm_lang$elm_architecture_tutorial$Icosahedron$whitesX4 = A4(_elm_lang$elm_architecture_tutorial$Icosahedron$createFace, _elm_lang$core$Color$red, _elm_lang$elm_architecture_tutorial$Icosahedron$x3, _elm_lang$elm_architecture_tutorial$Icosahedron$x4, _elm_lang$elm_architecture_tutorial$Icosahedron$z3);
var _elm_lang$elm_architecture_tutorial$Icosahedron$whitesY1 = A4(_elm_lang$elm_architecture_tutorial$Icosahedron$createFace, _elm_lang$core$Color$green, _elm_lang$elm_architecture_tutorial$Icosahedron$y1, _elm_lang$elm_architecture_tutorial$Icosahedron$y2, _elm_lang$elm_architecture_tutorial$Icosahedron$x1);
var _elm_lang$elm_architecture_tutorial$Icosahedron$whitesY2 = A4(_elm_lang$elm_architecture_tutorial$Icosahedron$createFace, _elm_lang$core$Color$orange, _elm_lang$elm_architecture_tutorial$Icosahedron$y1, _elm_lang$elm_architecture_tutorial$Icosahedron$y2, _elm_lang$elm_architecture_tutorial$Icosahedron$x4);
var _elm_lang$elm_architecture_tutorial$Icosahedron$whitesY3 = A4(_elm_lang$elm_architecture_tutorial$Icosahedron$createFace, _elm_lang$core$Color$green, _elm_lang$elm_architecture_tutorial$Icosahedron$y3, _elm_lang$elm_architecture_tutorial$Icosahedron$y4, _elm_lang$elm_architecture_tutorial$Icosahedron$x2);
var _elm_lang$elm_architecture_tutorial$Icosahedron$whitesY4 = A4(_elm_lang$elm_architecture_tutorial$Icosahedron$createFace, _elm_lang$core$Color$orange, _elm_lang$elm_architecture_tutorial$Icosahedron$y3, _elm_lang$elm_architecture_tutorial$Icosahedron$y4, _elm_lang$elm_architecture_tutorial$Icosahedron$x3);
var _elm_lang$elm_architecture_tutorial$Icosahedron$whitesZ1 = A4(_elm_lang$elm_architecture_tutorial$Icosahedron$createFace, _elm_lang$core$Color$yellow, _elm_lang$elm_architecture_tutorial$Icosahedron$z1, _elm_lang$elm_architecture_tutorial$Icosahedron$z2, _elm_lang$elm_architecture_tutorial$Icosahedron$y1);
var _elm_lang$elm_architecture_tutorial$Icosahedron$whitesZ2 = A4(_elm_lang$elm_architecture_tutorial$Icosahedron$createFace, _elm_lang$core$Color$purple, _elm_lang$elm_architecture_tutorial$Icosahedron$z1, _elm_lang$elm_architecture_tutorial$Icosahedron$z2, _elm_lang$elm_architecture_tutorial$Icosahedron$y4);
var _elm_lang$elm_architecture_tutorial$Icosahedron$whitesZ3 = A4(_elm_lang$elm_architecture_tutorial$Icosahedron$createFace, _elm_lang$core$Color$yellow, _elm_lang$elm_architecture_tutorial$Icosahedron$z3, _elm_lang$elm_architecture_tutorial$Icosahedron$z4, _elm_lang$elm_architecture_tutorial$Icosahedron$y2);
var _elm_lang$elm_architecture_tutorial$Icosahedron$whitesZ4 = A4(_elm_lang$elm_architecture_tutorial$Icosahedron$createFace, _elm_lang$core$Color$purple, _elm_lang$elm_architecture_tutorial$Icosahedron$z3, _elm_lang$elm_architecture_tutorial$Icosahedron$z4, _elm_lang$elm_architecture_tutorial$Icosahedron$y3);
var _elm_lang$elm_architecture_tutorial$Icosahedron$facesWhite = {
	ctor: '::',
	_0: _elm_lang$elm_architecture_tutorial$Icosahedron$whitesX1,
	_1: {
		ctor: '::',
		_0: _elm_lang$elm_architecture_tutorial$Icosahedron$whitesX2,
		_1: {
			ctor: '::',
			_0: _elm_lang$elm_architecture_tutorial$Icosahedron$whitesX3,
			_1: {
				ctor: '::',
				_0: _elm_lang$elm_architecture_tutorial$Icosahedron$whitesX4,
				_1: {
					ctor: '::',
					_0: _elm_lang$elm_architecture_tutorial$Icosahedron$whitesY1,
					_1: {
						ctor: '::',
						_0: _elm_lang$elm_architecture_tutorial$Icosahedron$whitesY2,
						_1: {
							ctor: '::',
							_0: _elm_lang$elm_architecture_tutorial$Icosahedron$whitesY3,
							_1: {
								ctor: '::',
								_0: _elm_lang$elm_architecture_tutorial$Icosahedron$whitesY4,
								_1: {
									ctor: '::',
									_0: _elm_lang$elm_architecture_tutorial$Icosahedron$whitesZ1,
									_1: {
										ctor: '::',
										_0: _elm_lang$elm_architecture_tutorial$Icosahedron$whitesZ2,
										_1: {
											ctor: '::',
											_0: _elm_lang$elm_architecture_tutorial$Icosahedron$whitesZ3,
											_1: {
												ctor: '::',
												_0: _elm_lang$elm_architecture_tutorial$Icosahedron$whitesZ4,
												_1: {ctor: '[]'}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
};
var _elm_lang$elm_architecture_tutorial$Icosahedron$black1 = A4(_elm_lang$elm_architecture_tutorial$Icosahedron$createFace, _elm_lang$core$Color$darkBlue, _elm_lang$elm_architecture_tutorial$Icosahedron$x1, _elm_lang$elm_architecture_tutorial$Icosahedron$y1, _elm_lang$elm_architecture_tutorial$Icosahedron$z1);
var _elm_lang$elm_architecture_tutorial$Icosahedron$black2 = A4(_elm_lang$elm_architecture_tutorial$Icosahedron$createFace, _elm_lang$core$Color$darkGrey, _elm_lang$elm_architecture_tutorial$Icosahedron$x1, _elm_lang$elm_architecture_tutorial$Icosahedron$y2, _elm_lang$elm_architecture_tutorial$Icosahedron$z4);
var _elm_lang$elm_architecture_tutorial$Icosahedron$black3 = A4(_elm_lang$elm_architecture_tutorial$Icosahedron$createFace, _elm_lang$core$Color$darkGrey, _elm_lang$elm_architecture_tutorial$Icosahedron$x2, _elm_lang$elm_architecture_tutorial$Icosahedron$y3, _elm_lang$elm_architecture_tutorial$Icosahedron$z4);
var _elm_lang$elm_architecture_tutorial$Icosahedron$black4 = A4(_elm_lang$elm_architecture_tutorial$Icosahedron$createFace, _elm_lang$core$Color$darkGrey, _elm_lang$elm_architecture_tutorial$Icosahedron$x2, _elm_lang$elm_architecture_tutorial$Icosahedron$y4, _elm_lang$elm_architecture_tutorial$Icosahedron$z1);
var _elm_lang$elm_architecture_tutorial$Icosahedron$black5 = A4(_elm_lang$elm_architecture_tutorial$Icosahedron$createFace, _elm_lang$core$Color$darkGrey, _elm_lang$elm_architecture_tutorial$Icosahedron$x3, _elm_lang$elm_architecture_tutorial$Icosahedron$y4, _elm_lang$elm_architecture_tutorial$Icosahedron$z2);
var _elm_lang$elm_architecture_tutorial$Icosahedron$black6 = A4(_elm_lang$elm_architecture_tutorial$Icosahedron$createFace, _elm_lang$core$Color$darkGrey, _elm_lang$elm_architecture_tutorial$Icosahedron$x3, _elm_lang$elm_architecture_tutorial$Icosahedron$y3, _elm_lang$elm_architecture_tutorial$Icosahedron$z3);
var _elm_lang$elm_architecture_tutorial$Icosahedron$black7 = A4(_elm_lang$elm_architecture_tutorial$Icosahedron$createFace, _elm_lang$core$Color$darkGrey, _elm_lang$elm_architecture_tutorial$Icosahedron$x4, _elm_lang$elm_architecture_tutorial$Icosahedron$y2, _elm_lang$elm_architecture_tutorial$Icosahedron$z3);
var _elm_lang$elm_architecture_tutorial$Icosahedron$black8 = A4(_elm_lang$elm_architecture_tutorial$Icosahedron$createFace, _elm_lang$core$Color$darkGrey, _elm_lang$elm_architecture_tutorial$Icosahedron$x4, _elm_lang$elm_architecture_tutorial$Icosahedron$y1, _elm_lang$elm_architecture_tutorial$Icosahedron$z2);
var _elm_lang$elm_architecture_tutorial$Icosahedron$facesBlack = {
	ctor: '::',
	_0: _elm_lang$elm_architecture_tutorial$Icosahedron$black1,
	_1: {
		ctor: '::',
		_0: _elm_lang$elm_architecture_tutorial$Icosahedron$black2,
		_1: {
			ctor: '::',
			_0: _elm_lang$elm_architecture_tutorial$Icosahedron$black3,
			_1: {
				ctor: '::',
				_0: _elm_lang$elm_architecture_tutorial$Icosahedron$black4,
				_1: {
					ctor: '::',
					_0: _elm_lang$elm_architecture_tutorial$Icosahedron$black5,
					_1: {
						ctor: '::',
						_0: _elm_lang$elm_architecture_tutorial$Icosahedron$black6,
						_1: {
							ctor: '::',
							_0: _elm_lang$elm_architecture_tutorial$Icosahedron$black7,
							_1: {
								ctor: '::',
								_0: _elm_lang$elm_architecture_tutorial$Icosahedron$black8,
								_1: {ctor: '[]'}
							}
						}
					}
				}
			}
		}
	}
};
var _elm_lang$elm_architecture_tutorial$Icosahedron$icosahedron = _elm_community$webgl$WebGL$triangles(
	_elm_lang$core$List$concat(
		{
			ctor: '::',
			_0: _elm_lang$elm_architecture_tutorial$Icosahedron$facesWhite,
			_1: {
				ctor: '::',
				_0: _elm_lang$elm_architecture_tutorial$Icosahedron$facesBlack,
				_1: {ctor: '[]'}
			}
		}));
