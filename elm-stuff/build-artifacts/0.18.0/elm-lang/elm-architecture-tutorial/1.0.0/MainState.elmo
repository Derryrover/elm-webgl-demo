var _elm_lang$elm_architecture_tutorial$MainState$updateKeyMsg = F2(
	function (model, code) {
		var _p0 = code;
		switch (_p0) {
			case 37:
				return _elm_lang$core$Native_Utils.update(
					model,
					{x: model.x - 1.0e-2});
			case 39:
				return _elm_lang$core$Native_Utils.update(
					model,
					{x: model.x + 1.0e-2});
			case 38:
				return _elm_lang$core$Native_Utils.update(
					model,
					{y: model.y - 1.0e-2});
			case 40:
				return _elm_lang$core$Native_Utils.update(
					model,
					{y: model.y + 1.0e-2});
			default:
				return model;
		}
	});
var _elm_lang$elm_architecture_tutorial$MainState$updateAnimMsg = F2(
	function (model, dt) {
		var _p1 = model.spin;
		if (_p1 === true) {
			return _elm_lang$core$Native_Utils.update(
				model,
				{x: model.x + (dt / 5000), y: model.y + (dt / 10000)});
		} else {
			return model;
		}
	});
var _elm_lang$elm_architecture_tutorial$MainState$update = F2(
	function (msg, model) {
		var _p2 = msg;
		switch (_p2.ctor) {
			case 'AnimMsg':
				return {
					ctor: '_Tuple2',
					_0: A2(_elm_lang$elm_architecture_tutorial$MainState$updateAnimMsg, model, _p2._0),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'KeyMsg':
				return {
					ctor: '_Tuple2',
					_0: A2(_elm_lang$elm_architecture_tutorial$MainState$updateKeyMsg, model, _p2._0),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'Spin':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{spin: !model.spin}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			default:
				var _p3 = A2(_elm_lang$elm_architecture_tutorial$TextureExample$update, _p2._0, model.textureExample);
				var textureExampleModel = _p3._0;
				var textureExampleMessage = _p3._1;
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{textureExample: textureExampleModel}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
		}
	});
var _elm_lang$elm_architecture_tutorial$MainState$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$batch(
		{
			ctor: '::',
			_0: _elm_lang$animation_frame$AnimationFrame$diffs(_elm_lang$elm_architecture_tutorial$MainTypes$AnimMsg),
			_1: {
				ctor: '::',
				_0: _elm_lang$keyboard$Keyboard$downs(_elm_lang$elm_architecture_tutorial$MainTypes$KeyMsg),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$core$Platform_Sub$map,
						_elm_lang$elm_architecture_tutorial$MainTypes$MsgTextureExample,
						_elm_lang$elm_architecture_tutorial$TextureExample$subscriptions(model.textureExample)),
					_1: {ctor: '[]'}
				}
			}
		});
};
var _elm_lang$elm_architecture_tutorial$MainState$init = function () {
	var _p4 = _elm_lang$elm_architecture_tutorial$TextureExample$init;
	var textureModel = _p4._0;
	var textureCmd = _p4._1;
	return {
		ctor: '_Tuple2',
		_0: {x: 0, y: 0, spin: false, textureExample: textureModel},
		_1: A2(_elm_lang$core$Platform_Cmd$map, _elm_lang$elm_architecture_tutorial$MainTypes$MsgTextureExample, textureCmd)
	};
}();
